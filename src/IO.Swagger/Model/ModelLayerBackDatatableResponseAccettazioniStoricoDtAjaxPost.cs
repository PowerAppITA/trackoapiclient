/* 
 * Tracko
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost
    /// </summary>
    [DataContract]
    public partial class ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost :  IEquatable<ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost" /> class.
        /// </summary>
        /// <param name="draw">draw.</param>
        /// <param name="start">start.</param>
        /// <param name="length">length.</param>
        /// <param name="columns">columns.</param>
        /// <param name="search">search.</param>
        /// <param name="order">order.</param>
        public ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost(int? draw = default(int?), int? start = default(int?), int? length = default(int?), List<ModelLayerBackDatatableResponseColumn> columns = default(List<ModelLayerBackDatatableResponseColumn>), ModelLayerBackDatatableResponseSearch search = default(ModelLayerBackDatatableResponseSearch), List<ModelLayerBackDatatableResponseOrder> order = default(List<ModelLayerBackDatatableResponseOrder>))
        {
            this.Draw = draw;
            this.Start = start;
            this.Length = length;
            this.Columns = columns;
            this.Search = search;
            this.Order = order;
        }
        
        /// <summary>
        /// Gets or Sets Draw
        /// </summary>
        [DataMember(Name="draw", EmitDefaultValue=false)]
        public int? Draw { get; set; }

        /// <summary>
        /// Gets or Sets Start
        /// </summary>
        [DataMember(Name="start", EmitDefaultValue=false)]
        public int? Start { get; set; }

        /// <summary>
        /// Gets or Sets Length
        /// </summary>
        [DataMember(Name="length", EmitDefaultValue=false)]
        public int? Length { get; set; }

        /// <summary>
        /// Gets or Sets Columns
        /// </summary>
        [DataMember(Name="columns", EmitDefaultValue=false)]
        public List<ModelLayerBackDatatableResponseColumn> Columns { get; set; }

        /// <summary>
        /// Gets or Sets Search
        /// </summary>
        [DataMember(Name="search", EmitDefaultValue=false)]
        public ModelLayerBackDatatableResponseSearch Search { get; set; }

        /// <summary>
        /// Gets or Sets Order
        /// </summary>
        [DataMember(Name="order", EmitDefaultValue=false)]
        public List<ModelLayerBackDatatableResponseOrder> Order { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost {\n");
            sb.Append("  Draw: ").Append(Draw).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  Length: ").Append(Length).Append("\n");
            sb.Append("  Columns: ").Append(Columns).Append("\n");
            sb.Append("  Search: ").Append(Search).Append("\n");
            sb.Append("  Order: ").Append(Order).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost);
        }

        /// <summary>
        /// Returns true if ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost instances are equal
        /// </summary>
        /// <param name="input">Instance of ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModelLayerBackDatatableResponseAccettazioniStoricoDtAjaxPost input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Draw == input.Draw ||
                    (this.Draw != null &&
                    this.Draw.Equals(input.Draw))
                ) && 
                (
                    this.Start == input.Start ||
                    (this.Start != null &&
                    this.Start.Equals(input.Start))
                ) && 
                (
                    this.Length == input.Length ||
                    (this.Length != null &&
                    this.Length.Equals(input.Length))
                ) && 
                (
                    this.Columns == input.Columns ||
                    this.Columns != null &&
                    this.Columns.SequenceEqual(input.Columns)
                ) && 
                (
                    this.Search == input.Search ||
                    (this.Search != null &&
                    this.Search.Equals(input.Search))
                ) && 
                (
                    this.Order == input.Order ||
                    this.Order != null &&
                    this.Order.SequenceEqual(input.Order)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Draw != null)
                    hashCode = hashCode * 59 + this.Draw.GetHashCode();
                if (this.Start != null)
                    hashCode = hashCode * 59 + this.Start.GetHashCode();
                if (this.Length != null)
                    hashCode = hashCode * 59 + this.Length.GetHashCode();
                if (this.Columns != null)
                    hashCode = hashCode * 59 + this.Columns.GetHashCode();
                if (this.Search != null)
                    hashCode = hashCode * 59 + this.Search.GetHashCode();
                if (this.Order != null)
                    hashCode = hashCode * 59 + this.Order.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
