/* 
 * Tracko
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ModelLayerNewsletterMailUpExportParameter
    /// </summary>
    [DataContract]
    public partial class ModelLayerNewsletterMailUpExportParameter :  IEquatable<ModelLayerNewsletterMailUpExportParameter>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelLayerNewsletterMailUpExportParameter" /> class.
        /// </summary>
        /// <param name="listId">listId.</param>
        /// <param name="groupId">groupId.</param>
        /// <param name="confirm">confirm.</param>
        /// <param name="returnCode">returnCode.</param>
        /// <param name="baseUrl">baseUrl.</param>
        public ModelLayerNewsletterMailUpExportParameter(string listId = default(string), string groupId = default(string), string confirm = default(string), string returnCode = default(string), string baseUrl = default(string))
        {
            this.ListId = listId;
            this.GroupId = groupId;
            this.Confirm = confirm;
            this.ReturnCode = returnCode;
            this.BaseUrl = baseUrl;
        }
        
        /// <summary>
        /// Gets or Sets ListId
        /// </summary>
        [DataMember(Name="ListId", EmitDefaultValue=false)]
        public string ListId { get; set; }

        /// <summary>
        /// Gets or Sets GroupId
        /// </summary>
        [DataMember(Name="GroupId", EmitDefaultValue=false)]
        public string GroupId { get; set; }

        /// <summary>
        /// Gets or Sets Confirm
        /// </summary>
        [DataMember(Name="Confirm", EmitDefaultValue=false)]
        public string Confirm { get; set; }

        /// <summary>
        /// Gets or Sets ReturnCode
        /// </summary>
        [DataMember(Name="ReturnCode", EmitDefaultValue=false)]
        public string ReturnCode { get; set; }

        /// <summary>
        /// Gets or Sets BaseUrl
        /// </summary>
        [DataMember(Name="BaseUrl", EmitDefaultValue=false)]
        public string BaseUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModelLayerNewsletterMailUpExportParameter {\n");
            sb.Append("  ListId: ").Append(ListId).Append("\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  Confirm: ").Append(Confirm).Append("\n");
            sb.Append("  ReturnCode: ").Append(ReturnCode).Append("\n");
            sb.Append("  BaseUrl: ").Append(BaseUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModelLayerNewsletterMailUpExportParameter);
        }

        /// <summary>
        /// Returns true if ModelLayerNewsletterMailUpExportParameter instances are equal
        /// </summary>
        /// <param name="input">Instance of ModelLayerNewsletterMailUpExportParameter to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModelLayerNewsletterMailUpExportParameter input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ListId == input.ListId ||
                    (this.ListId != null &&
                    this.ListId.Equals(input.ListId))
                ) && 
                (
                    this.GroupId == input.GroupId ||
                    (this.GroupId != null &&
                    this.GroupId.Equals(input.GroupId))
                ) && 
                (
                    this.Confirm == input.Confirm ||
                    (this.Confirm != null &&
                    this.Confirm.Equals(input.Confirm))
                ) && 
                (
                    this.ReturnCode == input.ReturnCode ||
                    (this.ReturnCode != null &&
                    this.ReturnCode.Equals(input.ReturnCode))
                ) && 
                (
                    this.BaseUrl == input.BaseUrl ||
                    (this.BaseUrl != null &&
                    this.BaseUrl.Equals(input.BaseUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ListId != null)
                    hashCode = hashCode * 59 + this.ListId.GetHashCode();
                if (this.GroupId != null)
                    hashCode = hashCode * 59 + this.GroupId.GetHashCode();
                if (this.Confirm != null)
                    hashCode = hashCode * 59 + this.Confirm.GetHashCode();
                if (this.ReturnCode != null)
                    hashCode = hashCode * 59 + this.ReturnCode.GetHashCode();
                if (this.BaseUrl != null)
                    hashCode = hashCode * 59 + this.BaseUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
