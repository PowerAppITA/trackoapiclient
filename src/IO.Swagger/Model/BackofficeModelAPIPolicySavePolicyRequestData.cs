/* 
 * Tracko
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// BackofficeModelAPIPolicySavePolicyRequestData
    /// </summary>
    [DataContract]
    public partial class BackofficeModelAPIPolicySavePolicyRequestData :  IEquatable<BackofficeModelAPIPolicySavePolicyRequestData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BackofficeModelAPIPolicySavePolicyRequestData" /> class.
        /// </summary>
        /// <param name="typeId">typeId.</param>
        /// <param name="linguaId">linguaId.</param>
        /// <param name="sorgenteId">sorgenteId.</param>
        /// <param name="clienteId">clienteId.</param>
        /// <param name="text">text.</param>
        /// <param name="titolo">titolo.</param>
        /// <param name="url">url.</param>
        public BackofficeModelAPIPolicySavePolicyRequestData(int? typeId = default(int?), int? linguaId = default(int?), int? sorgenteId = default(int?), string clienteId = default(string), string text = default(string), string titolo = default(string), string url = default(string))
        {
            this.TypeId = typeId;
            this.LinguaId = linguaId;
            this.SorgenteId = sorgenteId;
            this.ClienteId = clienteId;
            this.Text = text;
            this.Titolo = titolo;
            this.Url = url;
        }
        
        /// <summary>
        /// Gets or Sets TypeId
        /// </summary>
        [DataMember(Name="typeId", EmitDefaultValue=false)]
        public int? TypeId { get; set; }

        /// <summary>
        /// Gets or Sets LinguaId
        /// </summary>
        [DataMember(Name="linguaId", EmitDefaultValue=false)]
        public int? LinguaId { get; set; }

        /// <summary>
        /// Gets or Sets SorgenteId
        /// </summary>
        [DataMember(Name="sorgenteId", EmitDefaultValue=false)]
        public int? SorgenteId { get; set; }

        /// <summary>
        /// Gets or Sets ClienteId
        /// </summary>
        [DataMember(Name="clienteId", EmitDefaultValue=false)]
        public string ClienteId { get; set; }

        /// <summary>
        /// Gets or Sets Text
        /// </summary>
        [DataMember(Name="text", EmitDefaultValue=false)]
        public string Text { get; set; }

        /// <summary>
        /// Gets or Sets Titolo
        /// </summary>
        [DataMember(Name="titolo", EmitDefaultValue=false)]
        public string Titolo { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name="url", EmitDefaultValue=false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BackofficeModelAPIPolicySavePolicyRequestData {\n");
            sb.Append("  TypeId: ").Append(TypeId).Append("\n");
            sb.Append("  LinguaId: ").Append(LinguaId).Append("\n");
            sb.Append("  SorgenteId: ").Append(SorgenteId).Append("\n");
            sb.Append("  ClienteId: ").Append(ClienteId).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  Titolo: ").Append(Titolo).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BackofficeModelAPIPolicySavePolicyRequestData);
        }

        /// <summary>
        /// Returns true if BackofficeModelAPIPolicySavePolicyRequestData instances are equal
        /// </summary>
        /// <param name="input">Instance of BackofficeModelAPIPolicySavePolicyRequestData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BackofficeModelAPIPolicySavePolicyRequestData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TypeId == input.TypeId ||
                    (this.TypeId != null &&
                    this.TypeId.Equals(input.TypeId))
                ) && 
                (
                    this.LinguaId == input.LinguaId ||
                    (this.LinguaId != null &&
                    this.LinguaId.Equals(input.LinguaId))
                ) && 
                (
                    this.SorgenteId == input.SorgenteId ||
                    (this.SorgenteId != null &&
                    this.SorgenteId.Equals(input.SorgenteId))
                ) && 
                (
                    this.ClienteId == input.ClienteId ||
                    (this.ClienteId != null &&
                    this.ClienteId.Equals(input.ClienteId))
                ) && 
                (
                    this.Text == input.Text ||
                    (this.Text != null &&
                    this.Text.Equals(input.Text))
                ) && 
                (
                    this.Titolo == input.Titolo ||
                    (this.Titolo != null &&
                    this.Titolo.Equals(input.Titolo))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TypeId != null)
                    hashCode = hashCode * 59 + this.TypeId.GetHashCode();
                if (this.LinguaId != null)
                    hashCode = hashCode * 59 + this.LinguaId.GetHashCode();
                if (this.SorgenteId != null)
                    hashCode = hashCode * 59 + this.SorgenteId.GetHashCode();
                if (this.ClienteId != null)
                    hashCode = hashCode * 59 + this.ClienteId.GetHashCode();
                if (this.Text != null)
                    hashCode = hashCode * 59 + this.Text.GetHashCode();
                if (this.Titolo != null)
                    hashCode = hashCode * 59 + this.Titolo.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
