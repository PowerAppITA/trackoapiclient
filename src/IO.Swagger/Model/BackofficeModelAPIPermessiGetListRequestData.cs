/* 
 * Tracko
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// BackofficeModelAPIPermessiGetListRequestData
    /// </summary>
    [DataContract]
    public partial class BackofficeModelAPIPermessiGetListRequestData :  IEquatable<BackofficeModelAPIPermessiGetListRequestData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BackofficeModelAPIPermessiGetListRequestData" /> class.
        /// </summary>
        /// <param name="typeId">typeId.</param>
        /// <param name="gruppoId">gruppoId.</param>
        /// <param name="roleId">roleId.</param>
        /// <param name="userId">userId.</param>
        public BackofficeModelAPIPermessiGetListRequestData(int? typeId = default(int?), int? gruppoId = default(int?), string roleId = default(string), string userId = default(string))
        {
            this.TypeId = typeId;
            this.GruppoId = gruppoId;
            this.RoleId = roleId;
            this.UserId = userId;
        }
        
        /// <summary>
        /// Gets or Sets TypeId
        /// </summary>
        [DataMember(Name="TypeId", EmitDefaultValue=false)]
        public int? TypeId { get; set; }

        /// <summary>
        /// Gets or Sets GruppoId
        /// </summary>
        [DataMember(Name="GruppoId", EmitDefaultValue=false)]
        public int? GruppoId { get; set; }

        /// <summary>
        /// Gets or Sets RoleId
        /// </summary>
        [DataMember(Name="RoleId", EmitDefaultValue=false)]
        public string RoleId { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="UserId", EmitDefaultValue=false)]
        public string UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BackofficeModelAPIPermessiGetListRequestData {\n");
            sb.Append("  TypeId: ").Append(TypeId).Append("\n");
            sb.Append("  GruppoId: ").Append(GruppoId).Append("\n");
            sb.Append("  RoleId: ").Append(RoleId).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BackofficeModelAPIPermessiGetListRequestData);
        }

        /// <summary>
        /// Returns true if BackofficeModelAPIPermessiGetListRequestData instances are equal
        /// </summary>
        /// <param name="input">Instance of BackofficeModelAPIPermessiGetListRequestData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BackofficeModelAPIPermessiGetListRequestData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TypeId == input.TypeId ||
                    (this.TypeId != null &&
                    this.TypeId.Equals(input.TypeId))
                ) && 
                (
                    this.GruppoId == input.GruppoId ||
                    (this.GruppoId != null &&
                    this.GruppoId.Equals(input.GruppoId))
                ) && 
                (
                    this.RoleId == input.RoleId ||
                    (this.RoleId != null &&
                    this.RoleId.Equals(input.RoleId))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TypeId != null)
                    hashCode = hashCode * 59 + this.TypeId.GetHashCode();
                if (this.GruppoId != null)
                    hashCode = hashCode * 59 + this.GruppoId.GetHashCode();
                if (this.RoleId != null)
                    hashCode = hashCode * 59 + this.RoleId.GetHashCode();
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
